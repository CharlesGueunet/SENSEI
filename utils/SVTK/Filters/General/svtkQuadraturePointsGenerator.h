/*=========================================================================

  Program:   Visualization Toolkit
  Module:    svtkQuadraturePointsGenerator.h

  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen
  All rights reserved.
  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.

     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notice for more information.

=========================================================================*/
/**
 * @class   svtkQuadraturePointsGenerator
 *
 *
 * Create a svtkPolyData on its output containing the vertices
 * for the quadrature points for one of the svtkDataArrays present
 * on its input svtkUnstructuredGrid. If the input data set has
 * has FieldData generated by svtkQuadraturePointInterpolator then
 * this will be set as point data. Note: Point sets are generated
 * per field array. This is because each field array may contain
 * its own dictionary.
 *
 * @sa
 * svtkQuadraturePointInterpolator, svtkQuadratureSchemeDefinition,
 * svtkInformationQuadratureSchemeDefinitionVectorKey
 */

#ifndef svtkQuadraturePointsGenerator_h
#define svtkQuadraturePointsGenerator_h

#include "svtkFiltersGeneralModule.h" // For export macro
#include "svtkPolyDataAlgorithm.h"

class svtkPolyData;
class svtkUnstructuredGrid;
class svtkInformation;
class svtkInformationVector;

class SVTKFILTERSGENERAL_EXPORT svtkQuadraturePointsGenerator : public svtkPolyDataAlgorithm
{
public:
  svtkTypeMacro(svtkQuadraturePointsGenerator, svtkPolyDataAlgorithm);
  void PrintSelf(ostream& os, svtkIndent indent) override;
  static svtkQuadraturePointsGenerator* New();

protected:
  int FillInputPortInformation(int port, svtkInformation* info) override;

  int RequestData(
    svtkInformation* req, svtkInformationVector** input, svtkInformationVector* output) override;

  /**
   * Generate the point set .
   */
  int Generate(svtkUnstructuredGrid* usgIn, svtkDataArray* offsets, svtkPolyData* pdOut);

  int GenerateField(
    svtkUnstructuredGrid* usgIn, svtkDataArray* data, svtkDataArray* offsets, svtkPolyData* pdOut);

  svtkQuadraturePointsGenerator();
  ~svtkQuadraturePointsGenerator() override;

private:
  svtkQuadraturePointsGenerator(const svtkQuadraturePointsGenerator&) = delete;
  void operator=(const svtkQuadraturePointsGenerator&) = delete;
};

#endif

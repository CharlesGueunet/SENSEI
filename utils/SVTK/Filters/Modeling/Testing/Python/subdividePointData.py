#!/usr/bin/env python
import svtk
from svtk.util.misc import svtkGetDataRoot
SVTK_DATA_ROOT = svtkGetDataRoot()

#
# Test butterfly subdivision of point data
#
sphere = svtk.svtkSphereSource()
sphere.SetPhiResolution(11)
sphere.SetThetaResolution(11)
colorIt = svtk.svtkElevationFilter()
colorIt.SetInputConnection(sphere.GetOutputPort())
colorIt.SetLowPoint(0,0,-.5)
colorIt.SetHighPoint(0,0,.5)
butterfly = svtk.svtkButterflySubdivisionFilter()
butterfly.SetInputConnection(colorIt.GetOutputPort())
butterfly.SetNumberOfSubdivisions(3)
lut = svtk.svtkLookupTable()
lut.SetNumberOfColors(256)
lut.Build()
mapper = svtk.svtkPolyDataMapper()
mapper.SetInputConnection(butterfly.GetOutputPort())
mapper.SetLookupTable(lut)
actor = svtk.svtkActor()
actor.SetMapper(mapper)
linear = svtk.svtkLinearSubdivisionFilter()
linear.SetInputConnection(colorIt.GetOutputPort())
linear.SetNumberOfSubdivisions(3)
mapper2 = svtk.svtkPolyDataMapper()
mapper2.SetInputConnection(linear.GetOutputPort())
mapper2.SetLookupTable(lut)
actor2 = svtk.svtkActor()
actor2.SetMapper(mapper2)
mapper3 = svtk.svtkPolyDataMapper()
mapper3.SetInputConnection(colorIt.GetOutputPort())
mapper3.SetLookupTable(lut)
actor3 = svtk.svtkActor()
actor3.SetMapper(mapper3)
ren1 = svtk.svtkRenderer()
ren2 = svtk.svtkRenderer()
ren3 = svtk.svtkRenderer()
renWin = svtk.svtkRenderWindow()
renWin.AddRenderer(ren1)
renWin.AddRenderer(ren2)
renWin.AddRenderer(ren3)
iren = svtk.svtkRenderWindowInteractor()
iren.SetRenderWindow(renWin)
ren1.AddActor(actor)
ren1.SetBackground(1,1,1)
ren2.AddActor(actor2)
ren2.SetBackground(1,1,1)
ren3.AddActor(actor3)
ren3.SetBackground(1,1,1)
renWin.SetSize(600,200)
aCamera = svtk.svtkCamera()
aCamera.Azimuth(70)
aLight = svtk.svtkLight()
aLight.SetPosition(aCamera.GetPosition())
aLight.SetFocalPoint(aCamera.GetFocalPoint())
ren1.SetActiveCamera(aCamera)
ren1.AddLight(aLight)
ren1.ResetCamera()
aCamera.Dolly(1.4)
ren1.ResetCameraClippingRange()
ren2.SetActiveCamera(aCamera)
ren2.AddLight(aLight)
ren3.SetActiveCamera(aCamera)
ren3.AddLight(aLight)
ren3.SetViewport(0,0,.33,1)
ren2.SetViewport(.33,0,.67,1)
ren1.SetViewport(.67,0,1,1)
iren.Initialize()
def flat (__svtk__temp0=0,__svtk__temp1=0):
    actor.GetProperty().SetInterpolationToFlat()
    actor2.GetProperty().SetInterpolationToFlat()
    actor3.GetProperty().SetInterpolationToFlat()
    renWin.Render()

def smooth (__svtk__temp0=0,__svtk__temp1=0):
    actor.GetProperty().SetInterpolationToGouraud()
    actor2.GetProperty().SetInterpolationToGouraud()
    actor3.GetProperty().SetInterpolationToGouraud()
    renWin.Render()

# --- end of script --

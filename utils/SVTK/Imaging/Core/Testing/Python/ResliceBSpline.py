#!/usr/bin/env python
import svtk
from svtk.util.misc import svtkGetDataRoot
SVTK_DATA_ROOT = svtkGetDataRoot()

# this script tests svtkImageReslice with different interpolation modes,
# with the wrap-pad feature turned on and with a rotation
# Image pipeline
reader = svtk.svtkImageReader()
reader.ReleaseDataFlagOff()
reader.SetDataByteOrderToLittleEndian()
reader.SetDataExtent(0,63,0,63,1,93)
reader.SetDataSpacing(3.2,3.2,1.5)
reader.SetFilePrefix("" + str(SVTK_DATA_ROOT) + "/Data/headsq/quarter")
reader.SetDataMask(0x7fff)
transform = svtk.svtkTransform()
# rotate about the center of the image
transform.Translate(+100.8,+100.8,+69.0)
transform.RotateWXYZ(10,1,1,0)
transform.Translate(-100.8,-100.8,-69.0)
bspline3 = svtk.svtkImageBSplineInterpolator()
bspline3.SetSplineDegree(3)
bspline9 = svtk.svtkImageBSplineInterpolator()
bspline9.SetSplineDegree(9)
coeffs1 = svtk.svtkImageBSplineCoefficients()
coeffs1.SetInputConnection(reader.GetOutputPort())
coeffs1.SetSplineDegree(3)
coeffs2 = svtk.svtkImageBSplineCoefficients()
coeffs2.SetInputConnection(reader.GetOutputPort())
coeffs2.SetSplineDegree(9)
reslice1 = svtk.svtkImageReslice()
reslice1.SetInputConnection(coeffs1.GetOutputPort())
reslice1.SetResliceTransform(transform)
reslice1.SetInterpolator(bspline3)
reslice1.SetOutputSpacing(2.0,2.0,1.5)
reslice1.SetOutputOrigin(-32,-32,40)
reslice1.SetOutputExtent(0,127,0,127,0,0)
reslice2 = svtk.svtkImageReslice()
reslice2.SetInputConnection(coeffs1.GetOutputPort())
reslice2.SetInterpolator(bspline3)
reslice2.SetOutputSpacing(2.0,2.0,1.5)
reslice2.SetOutputOrigin(-32,-32,40)
reslice2.SetOutputExtent(0,127,0,127,0,0)
reslice3 = svtk.svtkImageReslice()
reslice3.SetInputConnection(coeffs2.GetOutputPort())
reslice3.SetResliceTransform(transform)
reslice3.SetInterpolator(bspline9)
reslice3.SetOutputSpacing(2.0,2.0,1.5)
reslice3.SetOutputOrigin(-32,-32,40)
reslice3.SetOutputExtent(0,127,0,127,0,0)
reslice4 = svtk.svtkImageReslice()
reslice4.SetInputConnection(coeffs2.GetOutputPort())
reslice4.SetInterpolator(bspline9)
reslice4.SetOutputSpacing(2.0,2.0,1.5)
reslice4.SetOutputOrigin(-32,-32,40)
reslice4.SetOutputExtent(0,127,0,127,0,0)
mapper1 = svtk.svtkImageMapper()
mapper1.SetInputConnection(reslice1.GetOutputPort())
mapper1.SetColorWindow(2000)
mapper1.SetColorLevel(1000)
mapper1.SetZSlice(0)
mapper2 = svtk.svtkImageMapper()
mapper2.SetInputConnection(reslice2.GetOutputPort())
mapper2.SetColorWindow(2000)
mapper2.SetColorLevel(1000)
mapper2.SetZSlice(0)
mapper3 = svtk.svtkImageMapper()
mapper3.SetInputConnection(reslice3.GetOutputPort())
mapper3.SetColorWindow(2000)
mapper3.SetColorLevel(1000)
mapper3.SetZSlice(0)
mapper4 = svtk.svtkImageMapper()
mapper4.SetInputConnection(reslice4.GetOutputPort())
mapper4.SetColorWindow(2000)
mapper4.SetColorLevel(1000)
mapper4.SetZSlice(0)
actor1 = svtk.svtkActor2D()
actor1.SetMapper(mapper1)
actor2 = svtk.svtkActor2D()
actor2.SetMapper(mapper2)
actor3 = svtk.svtkActor2D()
actor3.SetMapper(mapper3)
actor4 = svtk.svtkActor2D()
actor4.SetMapper(mapper4)
imager1 = svtk.svtkRenderer()
imager1.AddActor2D(actor1)
imager1.SetViewport(0.5,0.0,1.0,0.5)
imager2 = svtk.svtkRenderer()
imager2.AddActor2D(actor2)
imager2.SetViewport(0.0,0.0,0.5,0.5)
imager3 = svtk.svtkRenderer()
imager3.AddActor2D(actor3)
imager3.SetViewport(0.5,0.5,1.0,1.0)
imager4 = svtk.svtkRenderer()
imager4.AddActor2D(actor4)
imager4.SetViewport(0.0,0.5,0.5,1.0)
imgWin = svtk.svtkRenderWindow()
imgWin.AddRenderer(imager1)
imgWin.AddRenderer(imager2)
imgWin.AddRenderer(imager3)
imgWin.AddRenderer(imager4)
imgWin.SetSize(256,256)
imgWin.Render()
# --- end of script --

/*=========================================================================

  Program:   Visualization Toolkit
  Module:    svtkCGMWriter.h

  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen
  All rights reserved.
  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.

     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notice for more information.

=========================================================================*/
/**
 * @class   svtkCGMWriter
 * @brief   write polygonal data as a CGM file
 *
 * svtkCGMWriter writes CGM (Computer Graphics Metafile) output. CGM is a 2D
 * graphics vector format typically used by large plotters. This writer can
 * handle vertices, lines, polygons, and triangle strips in any combination.
 * Colors are specified either 1) from cell scalars (assumed to be RGB or
 * RGBA color specification), 2) from a specified color; or 3) randomly
 * assigned colors.
 *
 * Note: During output of the polygonal data, triangle strips are converted
 * to triangles, and polylines to lines. Also, due to limitations in the CGM
 * color model, only 256 colors are available to the color palette.
 *
 * @warning
 * The class svtkImageToPolyDataFilter is convenient for converting a raster
 * image into polygons (and color map) suitable for plotting with CGM.
 *
 * @sa
 * svtkPolyDataWriter svtkPointDataToCellData
 */

#ifndef svtkCGMWriter_h
#define svtkCGMWriter_h

#include "svtkIOGeometryModule.h" // For export macro
#include "svtkPolyDataWriter.h"

class svtkViewport;

#define SVTK_COLOR_MODE_DEFAULT 0
#define SVTK_COLOR_MODE_SPECIFIED_COLOR 1
#define SVTK_COLOR_MODE_RANDOM_COLORS 2

class SVTKIOGEOMETRY_EXPORT svtkCGMWriter : public svtkPolyDataWriter
{
public:
  /**
   * Instantiate with no viewport defined and sorting on. The default
   * resolution is 10,000, and the color mode is set to default.
   */
  static svtkCGMWriter* New();

  svtkTypeMacro(svtkCGMWriter, svtkPolyDataWriter);
  void PrintSelf(ostream& os, svtkIndent indent);

  //@{
  /**
   * Specify a svtkViewport object to be used to transform the svtkPolyData
   * points into 2D coordinates. By default (no svtkViewport specified), the
   * point coordinates are generated by ignoring the z values. If a viewport
   * is defined, then the points are transformed into viewport coordinates.
   */
  virtual void SetViewport(svtkViewport*);
  svtkGetObjectMacro(Viewport, svtkViewport);
  //@}

  //@{
  /**
   * Turn on/off the sorting of the cells via depth. If enabled, polygonal
   * cells will be sorted from back to front, i.e., a Painter's algorithm
   * sort.
   */
  svtkSetMacro(Sort, int);
  svtkGetMacro(Sort, int);
  //@}

  //@{
  /**
   * Specify the resolution of the CGM file. This number is used to integerize
   * the maximum coordinate range of the plot file.
   */
  svtkSetClampMacro(Resolution, int, 100, SVTK_INT_MAX);
  svtkGetMacro(Resolution, int);
  //@}

  //@{
  /**
   * Control how output polydata is colored. By default (ColorModeToDefault),
   * if per cell colors are defined (unsigned chars of 1-4 components), then
   * the cells are colored with these values. (If point colors are defined
   * and cell colors are not, you can use svtkPointDataToCellData to convert
   * the point colors to cell colors.) Otherwise, by default, the cells are
   * set to the specified color. If ColorModeToSpecifiedColor is set, then
   * the primitives will all be set to this color. If ColorModeToRandomColors
   * is set, each cell will be randomly assigned a color.
   */
  svtkSetMacro(ColorMode, int);
  svtkGetMacro(ColorMode, int);
  void SetColorModeToDefault() { this->SetColorMode(SVTK_COLOR_MODE_DEFAULT); }
  void SetColorModeToSpecifiedColor() { this->SetColorMode(SVTK_COLOR_MODE_SPECIFIED_COLOR); }
  void SetColorModeToRandomColors() { this->SetColorMode(SVTK_COLOR_MODE_RANDOM_COLORS); }
  //@}

  //@{
  /**
   * Set/Get the specified color to color the polydata cells. This
   * color is only used when the color mode is set to
   * ColorModeToSpecifiedColor, or ColorModeToDefault is set and no
   * cell colors are specified. The specified color is specified as RGB
   * values ranging from (0,1). (Note: CGM will map this color to the
   * closest color it supports.)
   */
  svtkSetVector3Macro(SpecifiedColor, float);
  svtkGetVectorMacro(SpecifiedColor, float, 3);
  //@}

protected:
  svtkCGMWriter();
  ~svtkCGMWriter() override;
  void WriteData();

  svtkViewport* Viewport;
  int ColorMode;
  float SpecifiedColor[3];
  int Resolution;
  int Sort;

private:
  svtkCGMWriter(const svtkCGMWriter&) = delete;
  void operator=(const svtkCGMWriter&) = delete;
};

#endif

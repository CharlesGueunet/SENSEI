/*=========================================================================

  Program:   ParaView
  Module:    svtkJavaScriptDataWriter.h

  Copyright (c) Kitware, Inc.
  All rights reserved.
  See Copyright.txt or http://www.paraview.org/HTML/Copyright.html for details.

     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notice for more information.

=========================================================================*/
/*-------------------------------------------------------------------------
  Copyright 2009 Sandia Corporation.
  Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
  the U.S. Government retains certain rights in this software.
-------------------------------------------------------------------------*/

/**
 * @class   svtkJavaScriptDataWriter
 * @brief   A Javascript data writer for svtkTable
 * Writes a svtkTable into a Javascript data format.
 */

#ifndef svtkJavaScriptDataWriter_h
#define svtkJavaScriptDataWriter_h

#include "svtkIOCoreModule.h" // For export macro
#include "svtkWriter.h"

class svtkStdString;
class svtkTable;

class SVTKIOCORE_EXPORT svtkJavaScriptDataWriter : public svtkWriter
{
public:
  static svtkJavaScriptDataWriter* New();
  svtkTypeMacro(svtkJavaScriptDataWriter, svtkWriter);
  void PrintSelf(ostream& os, svtkIndent indent) override;

  //@{
  /**
   * Get/set the name of the Javascript variable that the dataset will be assigned to.
   * The default value is "data", so the javascript code generated by the filter will
   * look like this: "var data = [ ... ];". If VariableName is set to nullptr, then no
   * assignment statement will be generated (i.e., only "[ ... ];" will be generated).
   */
  svtkSetStringMacro(VariableName);
  svtkGetStringMacro(VariableName);
  //@}

  //@{
  /**
   * Get/Set the filename for the file.
   */
  svtkSetStringMacro(FileName);
  svtkGetStringMacro(FileName);
  //@}

  //@{
  /**
   * Get/Set the whether or not to include field names
   * When field names are on you will get data output
   * that looks like this:
   * var data=[
   * {foo:3,time:"2009-11-04 16:09:42",bar:1 },
   * {foo:5,time:"2009-11-04 16:11:22",bar:0 },
   * without field names the data will be an array
   * of arrays like this:
   * var data=[
   * [3,"2009-11-04 16:09:42",1],
   * [5,"2009-11-04 16:11:22",0],

   * Default is ON (true)
   */
  svtkSetMacro(IncludeFieldNames, bool);
  svtkGetMacro(IncludeFieldNames, bool);
  //@}

  // Get/Set the OutputStream for writing output.
  void SetOutputStream(ostream* my_stream);
  ostream* GetOutputStream();

protected:
  svtkJavaScriptDataWriter();
  ~svtkJavaScriptDataWriter() override;

  bool OpenFile();
  void CloseFile();

  void WriteData() override;
  virtual void WriteTable(svtkTable* table, ostream* stream_ptr);

  // see algorithm for more info.
  // This writer takes in svtkTable.
  int FillInputPortInformation(int port, svtkInformation* info) override;

  char* VariableName;
  char* FileName;
  bool IncludeFieldNames;
  ostream* OutputStream;

private:
  svtkJavaScriptDataWriter(const svtkJavaScriptDataWriter&) = delete;
  void operator=(const svtkJavaScriptDataWriter&) = delete;

  ostream* OutputFile;
};

#endif
